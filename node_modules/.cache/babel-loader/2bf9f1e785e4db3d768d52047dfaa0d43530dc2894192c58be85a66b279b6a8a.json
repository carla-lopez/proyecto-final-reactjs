{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kaoru\\\\Desktop\\\\TP-2\\\\src\\\\components\\\\context\\\\CartContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext } from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nconst CartContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [cart, setCart] = useState([]);\n  const isInCart = id => {\n    return cart.some(x => x.id == id); //some= Busca un determinado elemento en el array y me devuelve un true o false\n  };\n\n  const addItem = (item, quantity) => {\n    if (isInCart(item.id)) {\n      let pos = cart.findIndex(x => x.id === item.id);\n      cart[pos].quantity += quantity;\n      setCart(...cart);\n    } else {\n      setCart(...cart, {\n        ...item,\n        quantity: quantity\n      });\n    }\n  };\n  const removeItem = id => {};\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addItem\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(CartContextProvider, \"ZqFaEIYkzI5UoYUmTgmqHbYYm/0=\");\n_c = CartContextProvider;\nexport default CartContextProvider;\nvar _c;\n$RefreshReg$(_c, \"CartContextProvider\");","map":{"version":3,"names":["React","createContext","useState","CartContext","CartContextProvider","children","cart","setCart","isInCart","id","some","x","addItem","item","quantity","pos","findIndex","removeItem"],"sources":["C:/Users/Kaoru/Desktop/TP-2/src/components/context/CartContext.jsx"],"sourcesContent":["import React , {createContext} from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nexport const CartContext = createContext();\r\n\r\n\r\nconst CartContextProvider = ({children}) =>{\r\n    const [cart, setCart] = useState([]);\r\n\r\n    const isInCart = (id) =>{\r\n        return cart.some(x => x.id == id);                   //some= Busca un determinado elemento en el array y me devuelve un true o false\r\n    }\r\n\r\n    const addItem = (item,quantity) => {\r\n        if(isInCart(item.id)){\r\n            let pos = cart.findIndex(x => x.id === item.id);\r\n            cart[pos].quantity += quantity;\r\n            setCart(...cart);\r\n\r\n\r\n        }else{\r\n            setCart(...cart,{...item, quantity:quantity})\r\n        }\r\n\r\n    }\r\n    const removeItem = (id) => {\r\n\r\n    }\r\n\r\n\r\n\r\n    return(\r\n    <CartContext.Provider value={{cart,addItem}} >\r\n        {children}\r\n    </CartContext.Provider>\r\n        )\r\n}\r\n\r\nexport default CartContextProvider;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,QAAO,OAAO;AAC3C,SAASC,QAAQ,QAAQ,OAAO;AAAC;AAEjC,OAAO,MAAMC,WAAW,gBAAGF,aAAa,EAAE;AAG1C,MAAMG,mBAAmB,GAAG,QAAe;EAAA;EAAA,IAAd;IAACC;EAAQ,CAAC;EACnC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMM,QAAQ,GAAIC,EAAE,IAAI;IACpB,OAAOH,IAAI,CAACI,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACF,EAAE,IAAIA,EAAE,CAAC,CAAC,CAAmB;EACzD,CAAC;;EAED,MAAMG,OAAO,GAAG,CAACC,IAAI,EAACC,QAAQ,KAAK;IAC/B,IAAGN,QAAQ,CAACK,IAAI,CAACJ,EAAE,CAAC,EAAC;MACjB,IAAIM,GAAG,GAAGT,IAAI,CAACU,SAAS,CAACL,CAAC,IAAIA,CAAC,CAACF,EAAE,KAAKI,IAAI,CAACJ,EAAE,CAAC;MAC/CH,IAAI,CAACS,GAAG,CAAC,CAACD,QAAQ,IAAIA,QAAQ;MAC9BP,OAAO,CAAC,GAAGD,IAAI,CAAC;IAGpB,CAAC,MAAI;MACDC,OAAO,CAAC,GAAGD,IAAI,EAAC;QAAC,GAAGO,IAAI;QAAEC,QAAQ,EAACA;MAAQ,CAAC,CAAC;IACjD;EAEJ,CAAC;EACD,MAAMG,UAAU,GAAIR,EAAE,IAAK,CAE3B,CAAC;EAID,oBACA,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAE;MAACH,IAAI;MAACM;IAAO,CAAE;IAAA,UACvCP;EAAQ;IAAA;IAAA;IAAA;EAAA,QACU;AAE3B,CAAC;AAAA,GA9BKD,mBAAmB;AAAA,KAAnBA,mBAAmB;AAgCzB,eAAeA,mBAAmB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}